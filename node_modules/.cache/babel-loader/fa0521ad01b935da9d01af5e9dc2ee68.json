{"ast":null,"code":"export default function customFetch() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var method = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"POST\";\n  // Default options are marked with *\n  return fetch(url, {\n    method: method,\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, cors, *same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  }).then(function (res) {\n    if (res.status !== 200) {\n      console.log(\"fetch fail\");\n    } else {\n      return res.json();\n    }\n  });\n}","map":{"version":3,"sources":["/home/akash/Documents/conduit/conduit-real-world/src/customFetch.js"],"names":["customFetch","url","data","token","method","fetch","mode","cache","credentials","headers","Authorization","redirect","referrer","body","JSON","stringify","then","res","status","console","log","json"],"mappings":"AAAA,eAAe,SAASA,WAAT,GAKb;AAAA,MAJAC,GAIA,uEAJM,EAIN;AAAA,MAHAC,IAGA,uEAHO,EAGP;AAAA,MAFAC,KAEA,uEAFQ,EAER;AAAA,MADAC,MACA,uEADS,MACT;AACA;AACA,SAAOC,KAAK,CAACJ,GAAD,EAAM;AAChBG,IAAAA,MAAM,EAAEA,MADQ;AACA;AAChBE,IAAAA,IAAI,EAAE,MAFU;AAEF;AACdC,IAAAA,KAAK,EAAE,UAHS;AAGG;AACnBC,IAAAA,WAAW,EAAE,aAJG;AAIY;AAC5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEP,KADR;AAEP,sBAAgB,kBAFT,CAIP;;AAJO,KALO;AAWhBQ,IAAAA,QAAQ,EAAE,QAXM;AAWI;AACpBC,IAAAA,QAAQ,EAAE,aAZM;AAYS;AACzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAbU,CAaW;;AAbX,GAAN,CAAL,CAcJc,IAdI,CAcC,UAAAC,GAAG,EAAI;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD,MAEO;AACL,aAAOH,GAAG,CAACI,IAAJ,EAAP;AACD;AACF,GApBM,CAAP;AAqBD","sourcesContent":["export default function customFetch(\n  url = \"\",\n  data = {},\n  token = \"\",\n  method = \"POST\"\n) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: method, // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  }).then(res => {\n    if (res.status !== 200) {\n      console.log(\"fetch fail\");\n    } else {\n      return res.json();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}